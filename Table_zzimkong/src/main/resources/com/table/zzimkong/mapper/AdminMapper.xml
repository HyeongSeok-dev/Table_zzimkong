<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.table.zzimkong.mapper.AdminMapper">

	<!-- 관리자 - 메인 : 데이터 뿌리기 -->
	<!-- 입점 승인 대기, 신고 처리 대기, 오늘 가입자 수, 오늘 예약 수 -->
	<select id="selectAdminMain" resultType="com.table.zzimkong.vo.AdminMainVO">
		SELECT *
		FROM admin_main;
	</select>
	
	<!-- 문의 답변 대기 -->
	<select id="selectAdminMainCsUnAnswer" resultType="cs">
		SELECT
		    (SELECT COUNT(*)
		    	FROM cs_board
		    	WHERE cs_board_category_main = 3
		    	AND cs_board_re_lev = 0
		    ) - 
		    (SELECT COUNT(*)
		    	FROM cs_board
		    	WHERE cs_board_category_main = 3
		    	AND cs_board_re_lev = 1
		    ) AS countUnAnswerInquiry;
	</select>
	
	<!-- Chart.js -->
	<!-- 가입자 현황 : 시간별(지난 12시간) -->
	<select id="selectJoinByHour" resultType="member">
		SELECT
			DATE(user_reg_date) AS user_reg_date, 
			LPAD(HOUR(user_reg_date), 2, '0') AS join_hour,
			LPAD(MINUTE(user_reg_date), 2, '0') AS join_minute,
			COUNT(*) AS join_time_count
		FROM user
		WHERE
			user_reg_date BETWEEN DATE_SUB(NOW(), INTERVAL 12 HOUR) AND NOW()
		GROUP BY DATE(user_reg_date), LPAD(HOUR(user_reg_date), 2, '0'), LPAD(MINUTE(user_reg_date), 2, '0')
		ORDER BY DATE(user_reg_date), LPAD(HOUR(user_reg_date), 2, '0'), LPAD(MINUTE(user_reg_date), 2, '0')
	</select>
	
	<!-- 가입자 현황 : 날짜별(지난 7일) -->
	<select id="selectJoinByDate" resultType="member">
		SELECT
		    date_range.date AS user_reg_date,
		    COUNT(user.user_reg_date) AS join_date_count
		FROM (
		    SELECT
		        CURDATE() - INTERVAL day_num DAY  AS date
		    FROM (
		        SELECT 0 day_num UNION ALL
		        SELECT 1 UNION ALL
		        SELECT 2 UNION ALL
		        SELECT 3 UNION ALL
		        SELECT 4 UNION ALL
		        SELECT 5 UNION ALL
		        SELECT 6
		    ) numbers
		) date_range
		LEFT JOIN user
		ON DATE(user.user_reg_date) = date_range.date
		GROUP BY date_range.date
		ORDER BY date_range.date;
	</select>
	
	<!-- 예약자 현황 : 시간별(지난 12시간) -->
	<select id="selectResByHour" resultType="res">
		SELECT
			DATE(res_now) AS 'res_date',
			LPAD(HOUR(res_now), 2, '0') AS 'res_hour',
			LPAD(MINUTE(res_now), 2, '0') AS 'res_minute',
			COUNT(*) AS 'res_time_count'
		FROM reservation
		WHERE
			res_now BETWEEN DATE_SUB(NOW(), INTERVAL 12 HOUR) AND NOW()
		GROUP BY
			DATE(res_now), LPAD(HOUR(res_now), 2, '0'), LPAD(MINUTE(res_now), 2, '0')
	</select>
	
	<!-- 예약자 현황 : 날짜별(지난 7일) -->
	<select id="selectResByDate" resultType="res">
		SELECT
			res_dates.res_date
			, COUNT(reservation.res_now) AS 'res_date_count'
		FROM (
			SELECT
				CURDATE() - INTERVAL N DAY  AS 'res_date'
			FROM (
				SELECT 0 N UNION ALL
				SELECT 1 UNION ALL
				SELECT 2 UNION ALL
				SELECT 3 UNION ALL
				SELECT 4 UNION ALL
				SELECT 5 UNION ALL
				SELECT 6
			) numbers
		) res_dates
		LEFT JOIN reservation
		ON DATE(reservation.res_now) = res_dates.res_date
		GROUP BY res_dates.res_date
		ORDER BY res_dates.res_date;
	</select>
	
	
	<!-- 관리자 - 회원 목록 조회 (페이지네이션, 검색 기능, 카테고리 필터) -->
	<!--		+ 검색 결과, 카테고리 필터링에 따른 페이지네이션의 범위 재조정 -->
	<select id="selectAdminMemberList" resultType="member">
		SELECT u.*, SUM(p.point_value) AS total_point
		FROM user u
		LEFT JOIN point p
		ON u.user_idx = p.user_idx
		WHERE user_category != 3
		<if test="!searchMemberType.equals('')">
			AND
			<choose>
				<when test="searchMemberType.equals('member_all')">
					(user_id LIKE CONCAT('%',#{searchMemberKeyword},'%')
					OR user_nick LIKE CONCAT('%',#{searchMemberKeyword},'%'))
				</when>
				<when test="searchMemberType.equals('member_id')">
					user_id LIKE CONCAT('%',#{searchMemberKeyword},'%')
				</when>
				<when test="searchMemberType.equals('member_nick')">
					user_nick LIKE CONCAT('%',#{searchMemberKeyword},'%')
				</when>
				<otherwise>
						1=1
				</otherwise>
			</choose>
		</if>
		<if test="!memberCategory.equals('')">
			AND
			<choose>
				<when test="memberCategory.equals('member_user')">
					user_category = 1
				</when>
				<when test="memberCategory.equals('member_ceo')">
					user_category = 2
				</when>
				<otherwise>
					(user_category = 1 OR user_category = 2)
				</otherwise>
			</choose>
		</if>
		<if test="!memberStatusCategory.equals('')">
			AND
			<choose>
				<when test="memberStatusCategory.equals('member_status_1')">
					user_status = 1
				</when>
				<when test="memberStatusCategory.equals('member_status_2')">
					user_status = 2
				</when>
				<when test="memberStatusCategory.equals('member_status_3')">
					user_status = 3
				</when>
				<otherwise>
					(user_status = 1 OR user_status = 2 OR user_status = 3)
				</otherwise>
			</choose>
		</if>
		GROUP BY u.user_idx
		ORDER BY u.user_idx DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 관리자 - 회원 목록 전체 글 목록 갯수 조회 -->
	<select id="selectAdminMemberListCount" resultType="int">
		SELECT COUNT(*)
		FROM (
				SELECT u.user_idx
				FROM user u
				LEFT JOIN point p
				ON u.user_idx = p.user_idx
				WHERE user_category != 3
				<if test="!searchMemberType.equals('')">
					AND
					<choose>
						<when test="searchMemberType.equals('member_all')">
							(user_id LIKE CONCAT('%',#{searchMemberKeyword},'%')
							OR user_nick LIKE CONCAT('%',#{searchMemberKeyword},'%'))
						</when>
						<when test="searchMemberType.equals('member_id')">
							user_id LIKE CONCAT('%',#{searchMemberKeyword},'%')
						</when>
						<when test="searchMemberType.equals('member_nick')">
							user_nick LIKE CONCAT('%',#{searchMemberKeyword},'%')
						</when>
						<otherwise>
							1=1
						</otherwise>
					</choose>
				</if>
				<if test="!memberCategory.equals('')">
			AND
			<choose>
				<when test="memberCategory.equals('member_user')">
					user_category = 1
				</when>
				<when test="memberCategory.equals('member_ceo')">
					user_category = 2
				</when>
				<otherwise>
					(user_category = 1 OR user_category = 2)
				</otherwise>
			</choose>
			</if>
			<if test="!memberStatusCategory.equals('')">
				AND
				<choose>
					<when test="memberStatusCategory.equals('member_status_1')">
						user_status = 1
					</when>
					<when test="memberStatusCategory.equals('member_status_2')">
						user_status = 2
					</when>
					<when test="memberStatusCategory.equals('member_status_3')">
						user_status = 3
					</when>
					<otherwise>
						(user_status = 1 OR user_status = 2 OR user_status = 3)
					</otherwise>
				</choose>
			</if>
				GROUP BY u.user_idx
			) AS subquery
	</select>
	
	<!-- 관리자 - 회원 상세 정보 -->
	<select id="selectAdminMemberInfo" resultType="member">
		SELECT u.*, SUM(p.point_value) AS total_point
		FROM user u
		LEFT JOIN point p
		ON u.user_idx = p.user_idx
		WHERE u.user_idx = #{user_idx}
	</select>
	
	<!-- 관리자 - 회원 탈퇴 처리 -->
	<update id="updateAdminMemberWithdraw">
		UPDATE user
		SET
			user_status = 3
			, user_reg_date = now()
		WHERE user_idx = #{user_idx}
	</update>
	
	<!-- 관리자 - 회원 탈퇴 처리 : 포인트도 같이 초기화 -->
	<update id="updateAdminMemberWithdrawPoint">
		UPDATE point
		SET
			point_value = 0
			, point_status = 2
		WHERE user_idx = #{user_idx}
	</update>
	
	<!-- 관리자 - 업체 목록 조회 (페이지네이션, 검색 기능, 카테고리 필터) -->
	<!--		+ 검색 결과, 카테고리 필터링에 따른 페이지네이션의 범위 재조정 -->
	<select id="selectAdminCompanyList" resultType="company">
		SELECT *
		FROM company
		<if test="!searchCompanyType.equals('')">
			WHERE
			<choose>
				<when test="searchCompanyType.equals('company_num')">
					com_id LIKE CONCAT('%',#{searchCompanyKeyword},'%')
				</when>
				<when test="searchCompanyType.equals('company_name')">
					com_name LIKE CONCAT('%',#{searchCompanyKeyword},'%')
				</when>
				<when test="searchCompanyType.equals('company_ceo')">
					com_ceo LIKE CONCAT('%',#{searchCompanyKeyword},'%')
				</when>
				<otherwise>
					1=1
				</otherwise>
			</choose>
		</if>
		<if test="!adGradeCategory.equals('')">
			AND
			<choose>
				<when test="adGradeCategory.equals('ad_grade_0')">
					com_ad_grade = 0
				</when>
				<when test="adGradeCategory.equals('ad_grade_1')">
					com_ad_grade = 1
				</when>
				<when test="adGradeCategory.equals('ad_grade_2')">
					com_ad_grade = 2
				</when>
				<when test="adGradeCategory.equals('ad_grade_3')">
					com_ad_grade = 3
				</when>
				<otherwise>
					(com_ad_grade = 0 OR com_ad_grade = 1
					OR com_ad_grade = 2 OR com_ad_grade = 3)
				</otherwise>
			</choose>
		</if>
		<if test="!companyStatusCategory.equals('')">
			AND
			<choose>
				<when test="companyStatusCategory.equals('company_status_1')">
					com_status = 1
				</when>
				<when test="companyStatusCategory.equals('company_status_2')">
					com_status = 2
				</when>
				<when test="companyStatusCategory.equals('company_status_3')">
					com_status = 3
				</when>
				<when test="companyStatusCategory.equals('company_status_4')">
					com_status = 4
				</when>
				<when test="companyStatusCategory.equals('company_status_5')">
					com_status = 5
				</when>
				<otherwise>
					(com_status = 1 OR com_status = 2 OR com_status = 3
					OR com_status = 4 OR com_status = 5)
				</otherwise>
			</choose>
		</if>
		ORDER BY com_id DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 관리자 - 업체 목록 전체 글 목록 갯수 조회 -->
	<select id="selectAdminCompanyListCount" resultType="int">
		SELECT COUNT(*)
		FROM (
				SELECT *
				FROM company
				<if test="!searchCompanyType.equals('')">
					WHERE
					<choose>
						<when test="searchCompanyType.equals('company_num')">
							com_id LIKE CONCAT('%',#{searchCompanyKeyword},'%')
						</when>
						<when test="searchCompanyType.equals('company_name')">
							com_name LIKE CONCAT('%',#{searchCompanyKeyword},'%')
						</when>
						<when test="searchCompanyType.equals('company_ceo')">
							com_ceo LIKE CONCAT('%',#{searchCompanyKeyword},'%')
						</when>
						<otherwise>
							1=1
						</otherwise>
					</choose>
				</if>
				<if test="!adGradeCategory.equals('')">
				AND
				<choose>
					<when test="adGradeCategory.equals('ad_grade_0')">
						com_ad_grade = 0
					</when>
					<when test="adGradeCategory.equals('ad_grade_1')">
						com_ad_grade = 1
					</when>
					<when test="adGradeCategory.equals('ad_grade_2')">
						com_ad_grade = 2
					</when>
					<when test="adGradeCategory.equals('ad_grade_3')">
						com_ad_grade = 3
					</when>
					<otherwise>
						(com_ad_grade = 0 OR com_ad_grade = 1
						OR com_ad_grade = 2 OR com_ad_grade = 3)
					</otherwise>
				</choose>
				</if>
				<if test="!companyStatusCategory.equals('')">
					AND
					<choose>
						<when test="companyStatusCategory.equals('company_status_1')">
							com_status = 1
						</when>
						<when test="companyStatusCategory.equals('company_status_2')">
							com_status = 2
						</when>
						<when test="companyStatusCategory.equals('company_status_3')">
							com_status = 3
						</when>
						<when test="companyStatusCategory.equals('company_status_4')">
							com_status = 4
						</when>
						<when test="companyStatusCategory.equals('company_status_5')">
							com_status = 5
						</when>
						<otherwise>
							(com_status = 1 OR com_status = 2 OR com_status = 3
							OR com_status = 4 OR com_status = 5)
						</otherwise>
					</choose>
				</if>
			) AS subquery
	</select>

	<!-- 관리자 - 업체 상세 정보 -->
	<select id="selectAdminCompanyInfo">
		SELECT *
		FROM company
		WHERE com_id = #{com_id}
	</select>
	
	<!-- 관리자 - 업체 상세 정보 수정 -->
	<update id="updateAdminCompanyInfoModify">
		UPDATE company
		SET
			com_status = #{com_status}
			, com_ad_grade = #{com_ad_grade}
		WHERE com_id = #{com_id}
	</update>
	
	<!-- 관리자 - 업체 승인/거부 처리 -->
	<update id="updateAdminCompanyRegister">
		UPDATE company
		SET
			<choose>
				<when test="company_open_register.equals('company_oepn_ok')">
					com_status = 1
				</when>
				<when test="company_open_register.equals('company_oepn_no')">
					com_status = 5
				</when>
			</choose>
		WHERE com_id = #{com_id}
	</update>
	
	<!-- 관리자 - 신고 목록 조회 (페이지네이션, 카테고리 필터) -->
	<!--		+ 카테고리 필터링에 따른 페이지네이션의 범위 재조정 -->
	<select id="selectAdminReportList" resultType="report">
		SELECT *
		FROM report
		<if test="!reportCategory.equals('') or !reportStatusCategory.equals('')">
		WHERE
			<if test="!reportCategory.equals('')">
				<choose>
					<when test="reportCategory.equals('report_review')">
						report_category = 0
					</when>
					<when test="reportCategory.equals('report_company')">
						report_category = 1
					</when>
					<otherwise>
						(report_category = 0 OR report_category = 1)
					</otherwise>
				</choose>
			</if>
			<if test="!reportCategory.equals('') and !reportStatusCategory.equals('')">
				AND
			</if>
			<if test="!reportStatusCategory.equals('')">
				<choose>
					<when test="reportStatusCategory.equals('report_status_1')">
						report_status = 1
					</when>
					<when test="reportStatusCategory.equals('report_status_2')">
						report_status = 2
					</when>
					<when test="reportStatusCategory.equals('report_status_3')">
						report_status = 3
					</when>
					<otherwise>
						(report_status = 1 OR report_status = 2 OR report_status = 3)
					</otherwise>
				</choose>
			</if>
		</if>
		ORDER BY report_num DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 관리자 - 신고 목록 전체 글 목록 갯수 조회 -->
	<select id="selectAdminReportListCount" resultType="int">
		SELECT COUNT(*)
		FROM report
		<if test="!reportCategory.equals('') or !reportStatusCategory.equals('')">
		WHERE
			<if test="!reportCategory.equals('')">
				<choose>
					<when test="reportCategory.equals('report_review')">
						report_category = 0
					</when>
					<when test="reportCategory.equals('report_company')">
						report_category = 1
					</when>
					<otherwise>
						(report_category = 0 OR report_category = 1)
					</otherwise>
				</choose>
			</if>
			<if test="!reportCategory.equals('') and !reportStatusCategory.equals('')">
				AND
			</if>
			<if test="!reportStatusCategory.equals('')">
				<choose>
					<when test="reportStatusCategory.equals('report_status_1')">
						report_status = 1
					</when>
					<when test="reportStatusCategory.equals('report_status_2')">
						report_status = 2
					</when>
					<when test="reportStatusCategory.equals('report_status_3')">
						report_status = 3
					</when>
					<otherwise>
						(report_status = 1 OR report_status = 2 OR report_status = 3)
					</otherwise>
				</choose>
			</if>
		</if>
	</select>
	
	<!-- 관리자 - 신고 상세 정보 -->
	<select id="selectAdminReportDetail" resultType="map">
		SELECT
			rp.*,
			rv.*,
			rv.user_id AS reported_userId,
			rv.review_subject AS reported_reviewSubject,
			rv.review_content AS reported_reviewContent,
			c.com_name AS comName
		FROM report rp
		LEFT JOIN review rv
		ON rp.review_num = rv.review_num
		JOIN company c
		ON rp.com_id = c.com_id
		WHERE report_num = #{report_num};
	</select>
	
	<!-- 관리자 - 신고 승인/반려 처리 -->
	<update id="updateAdminReportRegister">
		UPDATE report
		SET
		<choose>
			<when test="report_approve_register.equals('report_approve_ok')">
				report_status = 2
			</when>
			<when test="report_approve_register.equals('report_approve_no')">
				report_status = 3
			</when>
		</choose>
		WHERE report_num = #{report_num}
	</update>
	
	<!-- 관리자 - 고객센터 : 각 카테고리별 목록 조회 -->
	<select id="selectAdminCsList" parameterType="int" resultType="cs">
		SELECT *
		FROM cs_board
		<where>
			AND cs_board_category_main = #{csCategory}
			<if test="board.searchFAQ != null and !board.searchFAQ.equals('') ">
				AND cs_board_subject LIKE CONCAT('%', #{board.searchFAQ}, '%')
			</if>
			<if test="board.sdate != null and !board.sdate.equals('')">
				AND (cs_board_date <![CDATA[ >= ]]> #{board.sdate} AND  cs_board_date <![CDATA[ <= ]]>#{board.edate})
			</if>
		</where>
		ORDER BY
			cs_board_re_ref DESC
			, cs_board_re_seq ASC
	</select>
	
	<!-- 관리자 - 고객센터 : 공지사항, 자주묻는질문 새 글 등록 -->
	<insert id="insertAdminCsNoticeFaqRegister">
		<selectKey keyProperty="cs_board_num" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(cs_board_num), 0)
			FROM cs_board
		</selectKey>
			INSERT
			INTO cs_board
			VALUES (
				#{cs_board_num} + 1
				, 'admin'
				, #{cs_board_subject}
				, #{cs_board_content}
				 , #{cs_board_num} + 1
				 , #{cs_board_re_lev}
				 , #{cs_board_re_seq}		
				, 0 	-- cs_board_readcount
				, now()	-- cs_board_date
				, #{cs_board_category_user}
				, #{cs_board_category_main}
				, #{cs_board_category_sub}
				, #{cs_board_img_1}
				, #{cs_board_img_2}
				, #{cs_board_img_3}
				, #{cs_board_img_4}
				, #{cs_board_img_5}
			)
	</insert>
	
	<!-- 관리자 - 고객센터 : 공지사항, 자주묻는질문 글 수정 -->
	<update id="updateNoticeAndFaqBoard">
		UPDATE cs_board
		SET 
			cs_board_subject = #{cs_board_subject}
			, cs_board_content = #{cs_board_content}
			<if test="cs_board_img_1 != null and !cs_board_img_1.equals('')">
				, cs_board_img_1 = #{cs_board_img_1}
			</if>
			<if test="cs_board_img_2 != null and !cs_board_img_2.equals('')">
				, cs_board_img_2 = #{cs_board_img_2}
			</if>
			<if test="cs_board_img_3 != null and !cs_board_img_3.equals('')">
				, cs_board_img_3 = #{cs_board_img_3}
			</if>
			<if test="cs_board_img_4 != null and !cs_board_img_4.equals('')">
				, cs_board_img_4 = #{cs_board_img_4}
			</if>
			<if test="cs_board_img_5 != null and !cs_board_img_5.equals('')">
				, cs_board_img_5 = #{cs_board_img_5}
			</if>
			,cs_board_category_user = #{cs_board_category_user}
			,cs_board_category_sub = #{cs_board_category_sub}
		WHERE
			cs_board_num = #{cs_board_num}
	</update>
	
	<!-- 관리자 - 고객센터 : 1:1 문의 답글 등록 -->
	<insert id="insertBoardReply">
		<selectKey keyProperty="cs_board_num" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(cs_board_num), 0)
			FROM cs_board
		</selectKey>
			INSERT
			INTO cs_board
			VALUES (
				#{cs_board_num} + 1
				, 'admin'
				, #{cs_board_subject}
				, #{cs_board_content}
				 , #{cs_board_re_ref}
				 , #{cs_board_re_lev} +1
				 , #{cs_board_re_seq} +1		
				, 0 	-- cs_board_readcount
				, now()	-- cs_board_date
				, #{cs_board_category_user}
				, #{cs_board_category_main}
				, #{cs_board_category_sub}
				, #{cs_board_img_1}
				, #{cs_board_img_2}
				, #{cs_board_img_3}
				, #{cs_board_img_4}
				, #{cs_board_img_5}
			)
	</insert>
	
</mapper>