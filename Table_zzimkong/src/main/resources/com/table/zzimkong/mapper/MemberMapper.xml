<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.table.zzimkong.mapper.MemberMapper">

	<!-- 일반회원가입 [INSERT] -->
	<insert id="insertMember">
		INSERT 
		INTO user
		VALUES (
	
			null
			, #{user_id}
			, #{user_passwd}
			, #{user_nick}
			, CONCAT(#{user_email1}, '@',#{user_email2})
			, #{user_name}
			, #{user_birth}
			, #{com_num}
			, now()
			, #{user_phone}
			, 1
			, null
			, 1
			, 1
			)
		
	</insert>
	
	<!-- 업주회원가입 [INSERT] -->
	<insert id="insertCeoMember">
		INSERT 
		INTO user
		VALUES (
	
			null
			, #{user_id}
			, #{user_passwd}
			, #{user_nick}
			, CONCAT(#{user_email1}, '@', #{user_email2})
			, #{user_name}
			, #{user_birth}
			, #{com_num}
			, now()
			, #{user_phone}
			, 1
			, null
			, 1
			, 2
			)
		
	</insert>
	
	<!-- 회원 아이디정보 조회 select -->
	<select id="selectMember"  resultType="member">
		SELECT *
		FROM user
		<where>
			<if test="user_id != null">
				and user_id = #{user_id}
		 	</if>
		 	
			<if test="user_id == null and user_nick != null">
				and user_nick = #{user_nick}
		 	</if>
		 	
			<if test="user_id == null and user_email1 != null">
				and user_email = CONCAT(#{user_email1},'@',#{user_email2})
		 	</if>
				and user_status = 1
		</where>
	</select>
	
	<!-- 회원탈퇴 -->
	<update id="updateWithdrawMember">
		UPDATE user
	    SET
	         user_status=3
	         , user_reg_date = now()
	    WHERE user_id = #{user_id}
			
	</update>
	
	<!-- 로그인 -->
	<select id="selectValidMember" resultType="member">
		SELECT * 
		FROM user
		WHERE user_email = #{user_email}
			AND user_status = '1'
	</select>
	<!-- 메일 인증 정보 조회 - SELECT -->
	<!-- id 가 일치하는 인증 정보 레코드 조회 -->
	<select id="selectMailAuthInfo" resultType="mailAuthInfo">
		SELECT *
		FROM email_auth
		<choose>
			<when test="param.indexOf('@') >= 0">
				WHERE user_email = #{param}
			</when>
			<otherwise>
				WHERE user_id = #{param}
			</otherwise>
		</choose>
	</select>
	
	<!-- 새 인증정보 등록 - INSERT -->
	<insert id="insertMailAuthInfo">
		INSERT
		INTO email_auth
		<choose>
			<when test="param.indexOf('@') >= 0">
				VALUES (null, null, #{auth_code},#{param})
			</when>
			<otherwise>
				VALUES (null,#{param}, #{auth_code}, null)
			</otherwise>
		</choose>
	</insert>
	
	<!-- 기존 인증정보 갱신 - UPDATE -->
	<!-- id 에 해당하는 레코드의 인증코드(auth_code) 컬럼 수정 -->
	<update id="updateMailAuthInfo">
		UPDATE email_auth
		SET auth_code = #{auth_code}
		<choose>
			<when test="param.indexOf('@') >= 0">
				WHERE user_email = #{param}
			</when>
			<otherwise>
				WHERE user_id = #{param}
			</otherwise>
		</choose>
	</update>
	
	<!-- 회원 메일 인증정보 삭제 - DELETE -->
	<!-- mail_auth_info 테이블의 id 에 해당하는 레코드 삭제 -->
	<delete id="deleteMailAuthInfo">
		DELETE FROM email_auth		
		<choose>
			<when test="param.indexOf('@') >= 0">
				WHERE user_email = #{param}
			</when>
			<otherwise>
				WHERE user_id = #{param}
			</otherwise>
		</choose>
	</delete>

	<select id="selectVailidMailAuthInfo" resultType="mailAuthInfo">
		SELECT *
		FROM email_auth
		WHERE user_id = #{user_id}
		AND auth_code = #{auth_code}
	</select>

	
	<update id="updatePasswd">
		UPDATE user
		SET user_passwd = #{user_passwd}
		WHERE user_id = #{user_id}
	</update>
	
	<select id="selectIdAuth" resultType="member">
		SELECT *
		FROM user
		WHERE user_email = #{user_email}
	</select>

	
</mapper>