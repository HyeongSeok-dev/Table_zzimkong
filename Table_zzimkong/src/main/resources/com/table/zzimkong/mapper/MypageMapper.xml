<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.table.zzimkong.mapper.MypageMapper">

	<!-- 회원정보 조회 - SELECT -->
	<select id="selectMypage"  resultType="mypage">
	SELECT *
	FROM user
	WHERE user_id = #{user_id}
	</select>
	
	<!-- 닉네임 중복확인 - SELECT -->
	<select id="selectUserNick"  resultType="mypage">
	SELECT *
	FROM user
	WHERE user_nick = #{user_nick}
	</select>
	
	<!-- 회원정보 수정 - UPDATE -->
	<!-- @Param 어노테이션을 통해 파라미터 이름을 지정했으므로 #{파라미터명.xxx} 형식으로 객체 접근 -->
	<!-- 단, 새 패스워드(newPasswd)는 null 또는 널스트링이 아닐 경우에만 변경 -->
	<update id="updateMypage">
		UPDATE user
		SET
			user_nick = #{mypage.user_nick}
			, user_email = CONCAT(#{mypage.user_email1}, '@', #{mypage.user_email2}) -- user_email1, user_email2 문자열 결합
			<!-- 새 패스워드(newPasswd) 존재 여부에 따라 변경 여부 결정 -->
			<!-- 주의! 비교에 사용될 파라미터는 #{} 제외하고 표현 -->
			<if test="user_passwd1 != null and !user_passwd1.equals('')">
				, user_passwd = #{user_passwd1}  -- 새 패스워드 존재할 경우 기존 패스워드 변경
			</if>
		WHERE
			user_id = #{mypage.user_id}
	</update>
	
	<!-- 예약내역 조회 - SELECT -->
	<select id="selectResList">
		SELECT *
		FROM reservation as  r, company as c
		WHERE c.user_idx = #{sIdx} AND #{c.com_id} ;
<!-- 		ORDER BY res_idx DESC; -->
	</select>
	
	<!-- 회사명 조회 - SELECT -->
<!-- 	<select id="selectCom"> -->
<!-- 		SELECT com_name -->
<!-- 		FROM company -->
<!-- 		WHERE com_id = #{com_id} -->
<!-- 	</select> -->


</mapper>